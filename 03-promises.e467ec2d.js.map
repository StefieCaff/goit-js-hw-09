{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAOC,GAE5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUD,UAEpBI,EAAO,CAAEH,WAAUD,S,GAEpBA,E,IAbMQ,SAASC,cAAc,QAuC/BC,iBAAiB,UApBtB,SAAqBC,GACnBA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOH,EAAEI,OAAOf,MAAMgB,OACnCC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BpB,EAAcc,EAAYM,EAAI,GAC7BC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUD,EAAKqB,EAALrB,MACjBH,EAAAyB,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUD,EAAKqB,EAALrB,MAClBH,EAAAyB,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANxB,EAAM,M,IAE5Da,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\n//function to create promise and settimeout to mimic api call\nfunction createPromise(delay, position) {\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n//function to loop through number of times entered into form\n\nfunction callPromise(e) {\n  e.preventDefault();\n  let firstDelay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(firstDelay, i + 1)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    firstDelay += step;\n  };\n \n};\n\n// event on form submit to call promise loop\nform.addEventListener('submit', callPromise);"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","delay","position","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","target","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e467ec2d.js.map"}